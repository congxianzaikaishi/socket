client.py 客户端

from socket import *

import struct
import json

cli_tcp = socket(AF_INET,SOCK_STREAM)
cli_tcp.connect(('127.0.0.1',8086))
while True:
    cmd = input('>>>')
    if not cmd :
        break
    cli_tcp.send(cmd.encode('utf-8'))
    hand_len = cli_tcp.recv(4) # 出错 原因 一定要收四个字节 因为 pack 'i' 转化为4 个字节
    hand_len = struct.unpack('i', hand_len)
    hand = cli_tcp.recv(hand_len[0]).decode('utf-8')
    hand_1 = json.loads(hand)
    print(hand_1)
    data_len = hand_1['len']
    print(data_len)
    r_s = 0
    while r_s < data_len:
        data = cli_tcp.recv(1024)
        # print(data)
        # print(data.decode('gbk'))
        # print(len,type(len))
        # print(len(data))
        r_s += len(data)
        print(r_s)
        # r_s = len(data)
        print(data.decode('GBK'))

    # recv_size=0
    # recv_data=b''
    # while recv_size < data_len:
    #     recv_data+=client.recv(1024)
    #     recv_size+=len(recv_data)
    #
    # print(recv_data.decode('utf-8'))

server.py 服务器

from socket import *
import subprocess
import json
import struct


sever_tcp = socket(AF_INET,SOCK_STREAM)
sever_tcp.bind(('127.0.0.1',8086))
sever_tcp.listen(5)
while True:
    conn , addr = sever_tcp.accept()
    while True:
        cmd = conn.recv(1024)
        if not cmd:
            break
        res = subprocess.Popen(cmd.decode('utf-8'), shell=True,
                               stdout=subprocess.PIPE,
                               stdin=subprocess.PIPE,
                               stderr=subprocess.PIPE)
        stderr = res.stderr.read()
        stdout = res.stdout.read()
        hand = {
            'name': 'adad',
            'len': len(stderr)+len(stdout)
        }
        hand = json.dumps(hand)
        hand_len =struct.pack('i',len(hand.encode('utf-8')))
        conn.send(hand_len)
        conn.send(hand.encode('utf-8'))
        conn.send(stderr)
        conn.send(stdout)

